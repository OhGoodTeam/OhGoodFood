<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.ohgoodfood.dao.StoreMapper">

	<!-- 아이디 중복확인 -->
	<select id="findById" parameterType="String" resultType="kr.co.ohgoodfood.dto.Store">
		SELECT * FROM Store WHERE store_id = #{value}
	</select>
	
	<!-- 내 가게 리뷰 보기 -->
	<select id="getReviews" resultType="kr.co.ohgoodfood.dto.Review">
		SELECT 
			review_no,
			review_content,
			writed_at,
			is_blocked,
			review_img,
			user_id,
			store_id,
			order_no
		FROM Review
		WHERE store_id=#{storeId} AND is_blocked = 'N'
		ORDER BY writed_at DESC
	</select>

	<!-- 주문(미확정, 확정, 취소) 조회 -->
	<select id="getOrders" resultType="kr.co.ohgoodfood.dto.Orders">
		SELECT 
			o.*, p.*, i.store_img
		FROM Orders o
		JOIN Product p 
			ON o.product_no = p.product_no
		LEFT JOIN (
			SELECT store_id, store_img
			FROM Image
			WHERE img_no IN (
				SELECT MIN(img_no)
				FROM Image
				GROUP BY store_id
			)			
		)i ON o.store_id = i.store_id
		<where>
			o.store_id=#{storeId} 
			<choose>
				<when test="type == 'confirmed'">
					AND o.order_status IN ('confirmed', 'pickup')	
				</when>
				<otherwise>
					AND o.order_status=#{type}
				</otherwise>
			</choose>
			AND DATE_FORMAT(o.ordered_at, '%Y-%m') = #{selectedDate}
		</where>
		ORDER BY o.ordered_at DESC
	</select>

	<!-- order_no로 스토어 이름 조회 -->
	<select id="getStoreNameByOrderNo" resultType="kr.co.ohgoodfood.dto.Store">
		SELECT s.*
		FROM Orders o
		JOIN Store s ON o.store_id = s.store_id
		WHERE o.order_no = #{no}
	</select>
	
	<!-- 주문을 확정 -->
	<update id="confirmOrders">
		UPDATE Orders
		SET order_status=#{type}
		WHERE order_no=#{id}
	</update>
	
	<!-- 주문 코드 생성 -->
	<update id="createOrderCode">
		UPDATE Orders 
		SET order_code=#{randomCode}
		WHERE order_no=#{id} AND order_status=#{type}
	</update>
	
	<!-- 주문을 취소 -->
	<update id="cancleOrders">
		UPDATE Orders
		SET order_status=#{type}, canceld_from='store'
		WHERE order_no=#{id}
	</update>
	
	<!-- order_no로 주문 조회 -->
	<select id="getOrderById" parameterType="int" resultType="kr.co.ohgoodfood.dto.Orders">
		SELECT * 
		FROM Orders
		WHERE order_no=#{no}
	</select>
	
	<insert id="insertAlarm">
		INSERT INTO Alarm(
			alarm_title, alarm_contents, sended_at, alarm_displayed, receive_id, alarm_read
		) VALUES (
			#{alarm_title}, #{alarm_contents}, #{sended_at}, #{alarm_displayed}, #{receive_id}, #{alarm_read}
		)
		
	</insert>
	
	<!-- 주문을 픽업 상태로 변경 -->
	<update id="pickupOrders">
		UPDATE Orders
		SET order_status=#{type}, picked_at=NOW()
		WHERE order_no=#{id}
	</update>
	
	<!-- 주문상태(확정, 픽업) 조회  -->
	<select id="getConfirmedOrPickupOrders" parameterType="String" resultType="kr.co.ohgoodfood.dto.Orders">
	    SELECT o.*, p.*, i.store_img
	    FROM Orders o
	    JOIN Product p ON o.store_id = p.store_id
	    LEFT JOIN (
	        SELECT store_id, store_img
	        FROM Image
	        WHERE img_no IN (
	            SELECT MIN(img_no)
	            FROM Image
	            GROUP BY store_id
	        )
	    ) i ON o.store_id = i.store_id
	    WHERE o.store_id = #{id}
	      AND o.order_status IN ('confirmed', 'pickup')
	    ORDER BY o.ordered_at DESC
	</select>
	
	<!-- 내 가게 기간 매출 조회 -->
	<select id="getSales" resultType="kr.co.ohgoodfood.dto.StoreSales">
		SELECT
			o.store_id AS store_id,
			SUM(o.quantity * p.sale_price) AS sales,
			#{start} AS start_date,
			#{end} AS end_date,
			COUNT(*) as count
		FROM Orders o
		JOIN Product p
		ON o.product_no = p.product_no
		WHERE o.store_id=#{store_id}
		AND o.order_status='pickup'
		AND DATE(o.ordered_at) BETWEEN #{start} AND #{end}
	</select>

	<!--회원가입-->
	<insert id="insert" parameterType="kr.co.ohgoodfood.dto.Store">
		INSERT INTO Store (
		store_id, confirmed, business_number, store_address, store_name,
		store_menu,
		store_explain, store_telnumber, store_status, opened_at, closed_at,
		store_pwd,
		owner_name, category_bakery, category_fruit, category_salad,
		category_others, latitude, longitude
		) VALUES (
		#{store_id}, #{confirmed}, #{business_number}, #{store_address},
		#{store_name},
		#{store_menu}, #{store_explain}, #{store_telnumber}, #{store_status},
		#{opened_at}, #{closed_at}, #{store_pwd}, #{owner_name},
		#{category_bakery}, #{category_fruit}, #{category_salad},
		#{category_others}, #{latitude}, #{longitude}
		)
	</insert>
	
	<!--회원가입 시 이미지 넣기-->
	<insert id="insertImage" parameterType="kr.co.ohgoodfood.dto.Image">
		INSERT INTO Image (store_id, store_img)
		VALUES (#{store_id}, #{store_img})
	</insert>
	
	<!--이미지 가져오기 -->
	<select id="findImagesByStoreId" parameterType="string" resultType="kr.co.ohgoodfood.dto.Image">
    	SELECT * FROM Image WHERE store_id = #{store_id}
	</select>


	<select id="findProductByStoreId" parameterType="string" resultType="kr.co.ohgoodfood.dto.Product">
	    SELECT * FROM Product WHERE store_id = #{store_id} LIMIT 1
	</select>
	
	<!-- 오픈/마감 상태 변경 -->
	<update id="updateStoreStatus">
	    UPDATE Store
	    SET store_status = #{status}
	    WHERE store_id = #{store_id}
	</update>

	<!--마이페이지 수정-->
	<update id="updateStore" parameterType="kr.co.ohgoodfood.dto.Store">
		UPDATE Store
		SET
		opened_at = #{opened_at},
		closed_at = #{closed_at},
		category_bakery = #{category_bakery},
		category_salad = #{category_salad},
		category_fruit = #{category_fruit},
		category_others = #{category_others},
		store_menu = #{store_menu},
		store_explain = #{store_explain}
		WHERE store_id = #{store_id}
	</update>

</mapper>
